<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Pimpinan</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="flex">
    <!-- Sidebar -->
    <div class="w-72 text-white min-h-screen p-4 fixed" style="background-color: #5D8736;">
        <div class="flex items-center mb-8">
            <img src="/images/logo.png" alt="Logo" class="w-16 h-16 mr-7">
            <div>
                <h1 class="text-2xl font-bold">SIKOP</h1>
                <p class="text-sm">Sistem Informasi Koperasi</p>
            </div>
        </div>
        <nav>
            <ul>
                <li class="mb-4">
                    <a href="/dashboardPimpinan" class="flex items-center block p-6 py-3 hover:bg-green-900 rounded">
                        <img src="/images/vectordasbor.png" alt="lihat data icon" class="w=5 h-5 ">
                        <span class="ml-2 text-xl ml-5">Dashboard</span>
                    </a>
                </li>
                <li>
                    <button onclick="toggleDropdown()" class="flex items-center justify-between w-full focus:outline-none">
                        <div class="flex items-center">
                            <a href="#" class="flex items-center block p-6 py-3 hover:">
                                <img src="/images/lihatdata.png" alt="lihat data icon" class="w=5 h-5 ">
                                <span class="ml-2 text-xl ml-5">Lihat Data</span>
                            </a>
                        </div>
                        <img src="/images/angle-small-down.png" alt="dropdown icon" class="w-6 h-6 transform transition-transform" id="dropdownIcon">
                    </button>
                    <ul id="dropdownMenu" class="pl-6 hidden">
                        <li class="mb-2">
                            <a href="/simpananPimpinan" class="block p-3 py-3 text-lg hover:bg-green-900 rounded">Data Simpanan</a>
                        </li>
                        <li class="mb-2">
                            <a href="/pinjamanPimpinan" class="block p-3 py-3 text-lg hover:bg-green-900 rounded">Data Pinjaman</a>
                        </li>
                        <li class="mb-3">
                            <a href="/kreditPimpinan" class="block p-3 py-3 text-lg hover:bg-green-900 rounded">Data Kredit</a>
                        </li>
                    </ul>
                </li>
            </ul>
        </nav>
    </div>
    
    <script>
    function toggleDropdown() {
        const dropdownMenu = document.getElementById('dropdownMenu');
        dropdownMenu.classList.toggle('hidden');
    }
    </script>

    <!-- Main Content -->
    <div class="flex-1 bg-gray-100 ml-72">
        <div class="flex justify-between shadow-md p-4 bg-white">
            <h1 class="text-2xl"></h1>
            <div class="flex items-center">
                <span>Pimpinan</span>
                <img src="/images/profile-user.png" class="w-10 h-10 rounded-full ml-2">
            </div>
        </div>

        <div class="flex-1 p-8">
            <h1 class="text-4xl font-bold text-center mb-10">Data Simpanan Koperasi</h1>
            
            <!-- Filter Section -->
            <div class="bg-white rounded-lg shadow p-10 mb-10" style="background: linear-gradient(to right, rgb(93, 135, 54) 10%, rgba(93, 135, 54, 0.8) 50%, rgba(93, 135, 54, 0.4) 70%), url('/images/backroundLldikti10.jpeg'); background-size:cover; background-position: right 20%;">
                <div class="flex gap-9">
                    <div>
                        <label class="block mb-2 text-xl font-semibold text-white">Tahun</label>
                        <select id="tahun" name="tahun" class="border rounded-lg px-5 py-3 w-60 bg-white" required>
                            <option value="">Pilih Tahun</option>
                            <% tahunList.forEach(tahun => { %>
                                <option value="<%= tahun %>"><%= tahun %></option>
                            <% }); %>
                        </select>
                    </div>
                    <div>
                        <label class="block mb-2 text-xl font-semibold text-white">Bulan</label>
                        <select id="bulan" name="bulan" class="border rounded-lg px-5 py-3 w-60 bg-white" required>
                            <option value="">Pilih Bulan</option>
                            <% bulanList.forEach(bulan => { %>
                                <option value="<%= bulan %>"><%= ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'][bulan - 1] %></option>
                            <% }); %>
                        </select>
                    </div>
                    <div>
                        <label class="block mb-2 text-xl font-semibold text-white">Jenis Simpanan</label>
                        <select id="jenis" name="jenis" class="border rounded-lg px-5 py-3 w-60 bg-white" required>
                            <option value="">Pilih Simpanan</option>
                            <% jenisSimpanan.forEach(jenis => { %>
                                <option value="<%= jenis %>"><%= jenis.replace('simpanan_', '').toUpperCase() %></option>
                            <% }); %>
                        </select>
                    </div>
                </div>
                <button id="tampilkanData" style="background-color: #fff" class="text-base text-black font-base px-3 py-3 rounded mt-9">Tampilkan Data</button>
            </div>

            <!-- Table -->
            <div class="bg-white rounded-lg shadow overflow-x-auto">
                <table class="w-full">
                    <thead style="background-color: #5D8736;">
                        <tr>
                            <th class="px-6 py-3 text-left text-white">No</th>
                            <th class="px-6 py-3 text-left text-white">NIP</th>
                            <th class="px-6 py-3 text-left text-white">Nama</th>
                            <th class="px-6 py-3 text-left text-white">Jenis Simpanan</th>
                            <th class="px-6 py-3 text-left text-white">Jumlah</th>
                        </tr>
                    </thead>
                    <tbody id="dataTable">
                        <!-- Data akan diisi secara dinamis -->
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="mt-4 flex items-center justify-between">
                <div class="text-sm text-gray-600">
                    Menampilkan <span id="dataCount">0</span> data dari <span id="totalData">0</span> data
                </div>
                <div class="flex items-center gap-4">
                    <!-- Tombol Previous dan Next -->
                    <div class="flex gap-2">
                        <button id="previousButton" class="px-3 py-1 border rounded bg-gray-100 hover:bg-gray-200" disabled>Previous</button>
                        <span id="pageInfo" class="px-3 py-1">Halaman 1</span>
                        <button id="nextButton" class="px-3 py-1 border rounded bg-gray-100 hover:bg-gray-200" disabled>Next</button>
                    </div>
                    <!-- Tombol Cetak Laporan -->
                    <button onclick="cetakLaporan()" style="background-color: #5D8736" class="text-white px-4 py-2 rounded">
                        Cetak Laporan
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentPage = 1;
        let totalPages = 1;
    
        // Fungsi untuk menampilkan data
        async function loadData(page = 1) {
            const tahun = document.getElementById('tahun').value;
            const bulan = document.getElementById('bulan').value;
            const jenis = document.getElementById('jenis').value;
    
            if (!tahun || !bulan || !jenis) {
                alert('Harap lengkapi semua filter!');
                return;
            }
    
            try {
                const response = await fetch('/simpanan/filter', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ tahun, bulan, jenis, page }),
                });
    
                if (!response.ok) {
                    throw new Error(`Gagal memuat data: ${response.status}`);
                }
    
                const result = await response.json();
    
                // Handle data kosong
                if (!result.data || result.data.length === 0) {
                    document.getElementById('dataTable').innerHTML = `
                        <tr>
                            <td colspan="5" class="px-6 py-4 text-center">Tidak ada data ditemukan.</td>
                        </tr>
                    `;
                    document.getElementById('dataCount').textContent = 0;
                    return;
                }
    
                // Update tabel
                const tbody = document.getElementById('dataTable');
                tbody.innerHTML = result.data.map((row, index) => `
                    <tr class="border-b border-gray-200">
                        <td class="px-6 py-4">${index + 1}</td>
                        <td class="px-6 py-4">${row.nip}</td>
                        <td class="px-6 py-4">${row.nama}</td>
                        <td class="px-6 py-4">${jenis.replace('simpanan_', '').toUpperCase()}</td>
                        <td class="px-6 py-4">${Number(row.jumlah).toLocaleString('id-ID')}</td>
                    </tr>
                `).join('');
    
                // Update jumlah data
                document.getElementById('dataCount').textContent = result.data.length;
                document.getElementById('totalData').textContent = result.total;
    
                // Update pagination
                currentPage = result.page;
                totalPages = result.totalPages;
                document.getElementById('pageInfo').textContent = `Halaman ${currentPage} dari ${totalPages}`;
    
                // Enable/disable tombol
                document.getElementById('previousButton').disabled = currentPage === 1;
                document.getElementById('nextButton').disabled = currentPage === totalPages;
    
            } catch (error) {
                console.error('Error:', error);
                alert(error.message || 'Terjadi kesalahan saat memuat data.');
            }
        }
    
        // Event listener untuk tombol tampilkan data
        document.getElementById('tampilkanData').addEventListener('click', () => {
            currentPage = 1;
            loadData(currentPage);
        });
    
        // Event listener untuk tombol previous
        document.getElementById('previousButton').addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                loadData(currentPage);
            }
        });
    
        // Event listener untuk tombol next
        document.getElementById('nextButton').addEventListener('click', () => {
            if (currentPage < totalPages) {
                currentPage++;
                loadData(currentPage);
            }
        });
    
        // Fungsi cetak laporan
        function cetakLaporan() {
            const tahun = document.getElementById('tahun').value;
            const bulan = document.getElementById('bulan').value;
            const jenis = document.getElementById('jenis').value;
            const tipe = 'simpanan'; // Ganti dengan 'pinjaman' atau 'kredit' sesuai kebutuhan

            if (!tahun || !bulan || !jenis) {
                alert('Harap lengkapi semua filter terlebih dahulu');
                return;
            }

            const url = `/cetak-laporan?tahun=${tahun}&bulan=${bulan}&jenis=${jenis}&tipe=${tipe}`;
            window.open(url, '_blank');
        }
    </script>
</body>
</html>