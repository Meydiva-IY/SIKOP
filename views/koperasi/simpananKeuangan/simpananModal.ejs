<!-- Modal Simpanan -->
<div id="simpananModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50 p-4">
    <!-- Mengubah lebar dari w-[800px] menjadi w-[1000px] -->
    <div class="bg-white rounded-lg w-[1000px] max-h-[90vh] flex flex-col">
        <!-- Header -->
        <div class="p-6 border-b bg-[#5D8736] rounded-t-lg" style="background-color: #5D8736;">
            <h2 class="text-xl font-semibold text-white">Tambah Simpanan Baru</h2>
        </div>

        <!-- Body -->
        <div class="p-6 overflow-y-auto">
            <form id="simpananForm" class="space-y-6">
                <!-- Member Selection -->
                <div class="mb-6 space-y-4">
                    <div class="relative">
                        <label class="block text-sm font-medium mb-2">Nama Anggota</label>
                        <div class="relative">
                            <input 
                                type="text" 
                                id="searchAnggota" 
                                class="w-full p-3 border rounded-lg focus:ring-2 focus:ring-green-500 pr-10" 
                                placeholder="Ketik nama anggota..."
                                autocomplete="off"
                            >
                            <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                <span class="material-icons text-gray-400">search</span>
                            </div>
                        </div>
                        <select 
                            id="anggotaSelect" 
                            name="anggota" 
                            class="hidden"
                        >
                            <option value="">Pilih Anggota...</option>
                        </select>
                        <!-- Dropdown untuk hasil pencarian -->
                        <div 
                            id="searchResults" 
                            class="absolute z-10 w-full bg-white border rounded-lg mt-1 shadow-lg hidden max-h-60 overflow-y-auto"
                        ></div>
                    </div>
                
                    <!-- NIP Field (Read Only) -->
                    <div>
                        <label class="block text-sm font-medium mb-2">NIP</label>
                        <input 
                            type="text" 
                            id="nipField" 
                            class="w-full p-3 border rounded-lg bg-gray-50" 
                            readonly 
                            placeholder="NIP akan muncul otomatis"
                        >
                    </div>
                </div>

                <!-- Jenis Simpanan Selection -->
                <div class="grid grid-cols-3 gap-6">
                    <!-- Simpanan Pokok -->
                    <div class="bg-white rounded-lg border p-6 hover:shadow-md transition-shadow">
                        <label class="inline-flex items-center mb-3">
                            <input type="checkbox" id="checkPokok" class="form-checkbox h-5 w-5 text-green-600" 
                                onchange="toggleSimpananForm('Pokok')" checked>
                            <span class="ml-2 text-gray-700 font-medium">Simpanan Pokok</span>
                        </label>
                        <div id="formPokok" class="mt-4">
                            <label class="block text-sm text-gray-600 mb-2">Jumlah (Rp)</label>
                            <input type="number" name="simpanan_pokok" value="100000" 
                                class="w-full p-3 border rounded-lg bg-gray-100" readonly>
                            <p class="text-sm text-gray-500 mt-2">*Simpanan pokok ditetapkan sebesar Rp 100.000</p>
                        </div>
                    </div>

                    <!-- Simpanan Wajib -->
                    <div class="bg-white rounded-lg border p-6 hover:shadow-md transition-shadow">
                        <label class="inline-flex items-center mb-3">
                            <input type="checkbox" id="checkWajib" class="form-checkbox h-5 w-5 text-green-600" 
                                onchange="toggleSimpananForm('Wajib')">
                            <span class="ml-2 text-gray-700 font-medium">Simpanan Wajib</span>
                        </label>
                        <div id="formWajib" class="hidden mt-4">
                            <label class="block text-sm text-gray-600 mb-2">Jumlah (Rp)</label>
                            <input type="number" name="simpanan_wajib" 
                                class="w-full p-3 border rounded-lg focus:ring-2 focus:ring-green-500">
                        </div>
                    </div>

                    <!-- Simpanan Sukarela -->
                    <div class="bg-white rounded-lg border p-6 hover:shadow-md transition-shadow">
                        <label class="inline-flex items-center mb-3">
                            <input type="checkbox" id="checkSukarela" class="form-checkbox h-5 w-5 text-green-600" 
                                onchange="toggleSimpananForm('Sukarela')">
                            <span class="ml-2 text-gray-700 font-medium">Simpanan Sukarela</span>
                        </label>
                        <div id="formSukarela" class="hidden mt-4">
                            <label class="block text-sm text-gray-600 mb-2">Jumlah (Rp)</label>
                            <input type="number" name="simpanan_sukarela" 
                                class="w-full p-3 border rounded-lg focus:ring-2 focus:ring-green-500">
                        </div>
                    </div>
                </div>

                <!-- Metode Pembayaran -->
                <div class="bg-white rounded-lg border p-6 mt-6">
                    <label class="block text-sm font-medium mb-2">Metode Pembayaran</label>
                    <select name="metode_bayar" class="w-full p-3 border rounded-lg focus:ring-2 focus:ring-green-500">
                        <option value="">Pilih Metode Bayar...</option>
                        <option value="cash">Cash</option>
                        <option value="transfer">Transfer</option>
                    </select>
                </div>
            </form>
        </div>

        <!-- Footer -->
        <div class="px-6 py-4 border-t mt-auto bg-gray-50 rounded-b-lg">
            <div class="flex justify-end gap-3">
                <button onclick="closeSimpananModal()" class="px-6 py-2.5 border rounded-lg hover:bg-gray-100 transition-colors">
                    Batal
                </button>
                <button onclick="submitSimpanan()" class="px-6 py-2.5 text-white rounded-lg bg-[#5D8736] hover:bg-[#4a6c2b] transition-colors" style="background-color: #5D8736;">
                    Simpan
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    let anggotaList = [];
    let searchTimeout;
// Load anggota list when page loads
document.addEventListener('DOMContentLoaded', function() {
    loadAnggotaList();
    setupSearchHandler();
});

async function loadAnggotaList() {
    try {
        const response = await fetch('/api/anggota');
        anggotaList = await response.json();
        
        const anggotaSelect = document.getElementById('anggotaSelect');
        anggotaList.forEach(anggota => {
            const option = document.createElement('option');
            option.value = anggota.id;
            option.textContent = anggota.nama;
            option.dataset.nip = anggota.nip;
            anggotaSelect.appendChild(option);
        });
    } catch (error) {
        console.error('Error loading anggota:', error);
    }
}

function setupSearchHandler() {
    const searchInput = document.getElementById('searchAnggota');
    const searchResults = document.getElementById('searchResults');
    const nipField = document.getElementById('nipField');
    
    // Handle input changes with debounce
    searchInput.addEventListener('input', (e) => {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            const searchTerm = e.target.value.toLowerCase();
            if (searchTerm.length < 1) {
                searchResults.classList.add('hidden');
                return;
            }
            
            const filteredResults = anggotaList.filter(anggota => 
                anggota.nama.toLowerCase().includes(searchTerm)
            );
            
            displaySearchResults(filteredResults);
        }, 300);
    });
    
    // Hide results when clicking outside
    document.addEventListener('click', (e) => {
        if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
            searchResults.classList.add('hidden');
        }
    });
}

function displaySearchResults(results) {
    const searchResults = document.getElementById('searchResults');
    const anggotaSelect = document.getElementById('anggotaSelect');
    
    searchResults.innerHTML = '';
    searchResults.classList.remove('hidden');
    
    if (results.length === 0) {
        searchResults.innerHTML = `
            <div class="p-4 text-gray-500 text-center">
                Tidak ada hasil yang ditemukan
            </div>
        `;
        return;
    }
    
    results.forEach(anggota => {
        const div = document.createElement('div');
        div.className = 'p-3 hover:bg-gray-100 cursor-pointer';
        div.innerHTML = `
            <div class="font-medium">${anggota.nama}</div>
            <div class="text-sm text-gray-600">${anggota.nip}</div>
        `;
        
        div.addEventListener('click', () => {
            document.getElementById('searchAnggota').value = anggota.nama;
            document.getElementById('nipField').value = anggota.nip;
            anggotaSelect.value = anggota.id;
            searchResults.classList.add('hidden');
        });
        
        searchResults.appendChild(div);
    });
}

function clearForm() {
    document.getElementById('searchAnggota').value = '';
    document.getElementById('nipField').value = '';
    document.getElementById('anggotaSelect').value = '';
    document.getElementById('searchResults').classList.add('hidden');
}

function toggleSimpananForm(type) {
    const checkbox = document.getElementById(`check${type}`);
    const form = document.getElementById(`form${type}`);
    
    if (checkbox.checked) {
        form.classList.remove('hidden');
    } else {
        form.classList.add('hidden');
    }
}

function openSimpananModal(bulan) {
    document.getElementById('simpananModal').classList.remove('hidden');
    
    // Set tanggal sesuai bulan yang dipilih
    if (bulan) {
        const tahun = document.getElementById('filterTahun').value || new Date().getFullYear();
        const tanggalSimpanan = new Date(tahun, bulan - 1);
        document.getElementById('tanggalSimpanan').valueAsDate = tanggalSimpanan;
    }
}

function closeSimpananModal() {
    document.getElementById('simpananModal').classList.add('hidden');
    document.getElementById('simpananForm').reset();
    clearForm();

    // Reset semua checkbox dan form
    ['Wajib', 'Pokok', 'Sukarela'].forEach(type => {
        const checkbox = document.getElementById(`check${type}`);
        const form = document.getElementById(`form${type}`);
        
        // Khusus untuk Pokok, set ulang ke checked dan tampilkan form
        if (type === 'Pokok') {
            checkbox.checked = true;
            form.classList.remove('hidden');
        } else {
            checkbox.checked = false;
            form.classList.add('hidden');
        }
    });
}

async function submitSimpanan() {
    const form = document.getElementById('simpananForm');
    if (!validateForm()) {
        return;
    }

    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());

    try {
        const response = await fetch('/api/simpanan', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        });

        if (!response.ok) throw new Error('Network response was not ok');
        
        const result = await response.json();
        
        if (result.type === 'update') {
            showNotification('Simpanan berhasil diperbarui untuk anggota yang sudah ada', 'success');
        } else {
            showNotification('Simpanan baru berhasil ditambahkan', 'success');
        }
        
        closeSimpananModal();
        handleFilter();
        
    } catch (error) {
        console.error('Error submitting simpanan:', error);
        showNotification('Terjadi kesalahan saat menyimpan data', 'error');
    }
}

function validateForm() {
    const anggota = document.getElementById('searchAnggota').value;
    if (!anggota) {
        showNotification('Silakan pilih anggota terlebih dahulu', 'warning');
        return false;
    }

    const checkWajib = document.getElementById('checkWajib').checked;
    const checkPokok = document.getElementById('checkPokok').checked;
    const checkSukarela = document.getElementById('checkSukarela').checked;
    
    if (!checkWajib && !checkPokok && !checkSukarela) {
        showNotification('Pilih minimal satu jenis simpanan', 'warning');
        return false;
    }

    const metodeBayar = document.querySelector('select[name="metode_bayar"]').value;
    if (!metodeBayar) {
        showNotification('Pilih metode pembayaran', 'warning');
        return false;
    }

    return true;
}
</script>